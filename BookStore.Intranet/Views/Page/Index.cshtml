@model IEnumerable<BookStore.Data.Data.CMS.Page>

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    ViewData["Title"] = "Pages";
}

<meta name="csrf-token" content="@Antiforgery.GetAndStoreTokens(Context).RequestToken" />

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-11 bg-secondary bg-opacity-10 p-4 rounded">
            <div class="row align-items-center mb-4">
                <div class="col">
                    <h1 class="mb-0">Pages</h1>
                </div>
                <div class="col-auto">
                    <a asp-action="Create" class="btn btn-secondary d-flex align-items-center gap-2 px-3 py-2" style="font-weight: 500;">
                        <ion-icon name="add-circle-outline" style="font-size: 1.4rem;"></ion-icon>
                        Add
                    </a>
                </div>
            </div>

            <table class="table table-borderless table-striped align-middle mb-0">
                <thead>
                    <tr class="text-muted border-bottom">
                        <th>@Html.DisplayNameFor(m => m.First().LinkTitle)</th>
                        <th>@Html.DisplayNameFor(m => m.First().PageTitle)</th>
                        <th>@Html.DisplayNameFor(m => m.First().Position)</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-id="@item.IdPage">
                            <td>@Html.DisplayFor(m => item.LinkTitle)</td>
                            <td>@Html.DisplayFor(m => item.PageTitle)</td>
                            <td>@Html.DisplayFor(m => item.Position)</td>
                            <td class="text-end" style="min-width:130px;">
                                <a asp-action="Edit" asp-route-id="@item.IdPage" class="icon-btn" aria-label="Edit">
                                    <ion-icon name="create-outline" style="font-size:1.2rem;"></ion-icon>
                                </a>
                                <a asp-action="Details" asp-route-id="@item.IdPage" class="icon-btn" aria-label="Details">
                                    <ion-icon name="information-circle-outline" style="font-size:1.2rem;"></ion-icon>
                                </a>
                                <button type="button" class="icon-btn text-danger btn-delete" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@item.IdPage" aria-label="Delete" style="background:none; border:none; padding:0;">
                                    <ion-icon name="trash-outline" style="font-size:1.2rem;"></ion-icon>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Confirm Deletion</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Are you sure to delete this page?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        let deleteId = null;
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            deleteId = button.getAttribute('data-id');
        });

        document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
            if (!deleteId) return;

            const token = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

            fetch(`/Page/DeleteConfirmed/${deleteId}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': token
                }
            })
            .then(response => {
                if (response.ok) {
                    const row = document.querySelector(`tr[data-id='${deleteId}']`);
                    if (row) row.remove();
                    const modal = bootstrap.Modal.getInstance(deleteModal);
                    modal.hide();
                } else {
                    alert("Error");
                }
            })
            .catch(() => {
                alert("Error");
            });
        });
    </script>
}
