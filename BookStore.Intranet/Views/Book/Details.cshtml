@model BookStore.Intranet.Models.BookDetailsViewModel

@{
    ViewData["Title"] = "Book details";
}

<h1 class="mb-4 text-center">Book details</h1>

<div class="d-flex justify-content-center">
    <div class="col-md-10 col-lg-8">
        <div class="card shadow-sm p-4 bg-light rounded">
            <div class="row">
                <div class="col-md-5 text-center mb-3 mb-md-0">
                    @if (!string.IsNullOrEmpty(Model.Book.ImageUrl))
                    {
                        <img src="~/images/@Model.Book.ImageUrl" class="img-fluid rounded shadow-sm" alt="Book image" />
                    }
                    else
                    {
                        <span class="text-muted">No image available</span>
                    }
                </div>

                <div class="col-md-7">
                    <dl class="row mb-3">
                        <dt class="col-sm-4">Title</dt>
                        <dd class="col-sm-8">@Model.Book.Title</dd>

                        <dt class="col-sm-4">Description</dt>
                        <dd class="col-sm-8">@Model.Book.Description</dd>

                        <dt class="col-sm-4">Price</dt>
                        <dd class="col-sm-8">@Model.Book.Price.ToString("C")</dd>

                        <dt class="col-sm-4">Pages</dt>
                        <dd class="col-sm-8">@Model.Book.NumberOfPages</dd>

                        <dt class="col-sm-4">Year</dt>
                        <dd class="col-sm-8">@Model.Book.YearPublished</dd>

                        <dt class="col-sm-4">Language</dt>
                        <dd class="col-sm-8">@Model.Book.Language</dd>

                        <dt class="col-sm-4">Quantity</dt>
                        <dd class="col-sm-8">@Model.Book.Quantity</dd>

                        <dt class="col-sm-4">ISBN</dt>
                        <dd class="col-sm-8">@Model.Book.ISBN</dd>

                        <dt class="col-sm-4">Author</dt>
                        <dd class="col-sm-8">@Model.Book.Author?.FirstName @Model.Book.Author?.LastName</dd>

                        <dt class="col-sm-4">Genres</dt>
                        <dd class="col-sm-8">
                            @if (Model.Genres.Any())
                            {
                                <ul class="list-unstyled mb-0">
                                    @foreach (var genre in Model.Genres)
                                    {
                                        <li class="badge bg-secondary me-1">@genre</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <span class="text-muted">No genres assigned</span>
                            }
                        </dd>
                    </dl>
                </div>
            </div>

            <div class="mt-4 d-flex gap-2">
                <a asp-action="Edit" asp-route-id="@Model?.Book.IdBook" class="btn btn-secondary d-flex align-items-center gap-2 px-3 py-2" style="font-weight: 500;">
                    <ion-icon name="create-outline" style="font-size: 1.4rem;"></ion-icon> Edit
                </a>
                <a asp-action="Index" class="btn btn-outline-secondary d-flex align-items-center gap-2 px-3 py-2" style="font-weight: 500;">
                    <ion-icon name="arrow-back-outline" style="font-size: 1.4rem;"></ion-icon> Back
                </a>
            </div>
        </div>
    </div>
</div>
