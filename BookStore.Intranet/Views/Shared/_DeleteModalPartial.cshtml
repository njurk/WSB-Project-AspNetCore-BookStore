@{
    var itemName = ViewData["ItemName"]?.ToString() ?? "this item";
    var controller = ViewData["Controller"]?.ToString();
}

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete @itemName?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
        document.addEventListener('DOMContentLoaded', () => {
      let deleteId = null;
      const modalEl = document.getElementById('deleteModal');
      const modal = new bootstrap.Modal(modalEl);
      const controller = '@ViewData["Controller"]';

      modalEl.addEventListener('show.bs.modal', e => {
        deleteId = e.relatedTarget.getAttribute('data-id');
      });

      document.getElementById('confirmDeleteBtn').onclick = async () => {
        if (!deleteId) return alert('No ID');

        const token = document.querySelector('meta[name="csrf-token"]').content;

        try {
          const res = await fetch(`/${controller}/DeleteConfirmed/${deleteId}`, {
            method: 'POST',
            headers: { 'RequestVerificationToken': token }
          });
          if (!res.ok) throw new Error('Delete failed');

          document.querySelector(`tr[data-id='${deleteId}']`)?.remove();
          modal.hide();

          await new Promise(r => modalEl.addEventListener('hidden.bs.modal', r, { once: true }));

          document.body.classList.remove('modal-open');
          document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());

        } catch (err) {
          alert(err.message);
        }
      };
    });
</script>
