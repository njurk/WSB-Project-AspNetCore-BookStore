@model IEnumerable<BookStore.Data.Data.Entities.Book>

@{
    ViewData["Title"] = "Books";
    var searchTerm = Context.Request.Query["searchTerm"].ToString();
    var selectedGenre = ViewBag.SelectedGenreName as string;
}

<div class="row">
    <div class="col-md-2 py-3">
        <div class="px-3 py-4">
            @await Component.InvokeAsync("GenresList")
        </div>
    </div>

    <div class="col-md-10">
        <div class="container py-4">
            <div class="row">
                <div class="col-md-12 py-2">
                    <div class="d-flex justify-content-start align-items-center mb-4">
                        @if (!string.IsNullOrEmpty(selectedGenre))
                        {
                            <h3>Genre: <span>@selectedGenre</span></h3>
                        }
                        else
                        {
                            <h3>All genres</h3>
                        }
                    </div>
                    @if (!string.IsNullOrEmpty(searchTerm))
                    {
                        <p class="text-center">Showing results for "<strong>@searchTerm</strong>"</p>
                    }

                    @if (!Model.Any())
                    {
                        <p class="text-center">No books found.</p>
                    }
                    <div class="d-flex flex-wrap gap-4 mb-5 justify-content-start">
                        @foreach (var book in Model)
                        {
                            <div class="book-card">
                                <div class="card h-100 shadow-sm border-0">
                                    <a href="@Url.Action("Details", "Books", new { id = book.IdBook })" class="text-decoration-none text-dark">
                                        <img src="~/images/@book.ImageUrl" class="card-img-top book-cover" alt="@book.Title" />
                                    </a>
                                    <div class="card-body p-3 d-flex flex-column">
                                        <a href="@Url.Action("Details", "Books", new { id = book.IdBook })" class="text-decoration-none text-dark mb-1">
                                            <h6 class="card-title fw-semibold">@book.Title</h6>
                                        </a>
                                        <p class="text-muted mb-1" style="font-size: 0.9rem;">
                                            by @(book.Author != null ? $"{book.Author.FirstName} {book.Author.LastName}" : "Unknown")
                                        </p>
                                        <div class="d-flex align-items-center justify-content-between mt-auto">
                                            <span class="text-background fw-bold">$ @book.Price</span>

                                            <div class="d-flex gap-2">
                                                @await Html.PartialAsync("_BookActionButtons", book.IdBook)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_BookCardScriptsPartial")
}